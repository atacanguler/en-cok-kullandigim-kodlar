AndroidX SDKversion 29


///////////////////////////////////////////////////  AndroidManifest.xml


  <application>

 <meta-data
            android:name="com.google.android.geo.API_KEY"
            android:value="**************************" />

    </application>





/////////////////////////////////////////////////////   Layout.xml

<?xml version="1.0" encoding="utf-8"?>
<LinearLayout xmlns:android="http://schemas.android.com/apk/res/android"
    xmlns:app="http://schemas.android.com/apk/res-auto"
    android:orientation="vertical"
    android:layout_width="match_parent"
    android:layout_height="match_parent">

    <LinearLayout
        android:id="@+id/map01"
        android:layout_width="match_parent"
        android:layout_height="match_parent"
        android:orientation="vertical">

        <com.google.android.gms.maps.MapView
            android:id="@+id/mapView"
            android:layout_width="match_parent"
            android:layout_height="match_parent" />


    </LinearLayout>

</LinearLayout>



///////////////////////////////////////////////// Activity.java

import android.content.Intent;
import android.content.pm.PackageManager;
import android.os.Bundle;
import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.Button;

import androidx.appcompat.app.AppCompatActivity;

import com.google.android.gms.common.GooglePlayServicesNotAvailableException;
import com.google.android.gms.maps.CameraUpdate;
import com.google.android.gms.maps.CameraUpdateFactory;
import com.google.android.gms.maps.GoogleMap;
import com.google.android.gms.maps.MapView;
import com.google.android.gms.maps.MapsInitializer;
import com.google.android.gms.maps.OnMapReadyCallback;
import com.google.android.gms.maps.model.LatLng;

public class MapsActivity extends AppCompatActivity implements OnMapReadyCallback {


    //////////////////////////////////


    MapView mapViewz;
    GoogleMap mapz;
    private static final String MAP_VIEW_BUNDLE_KEY = "MapViewBundleKey";

    @Override
    protected void onCreate(Bundle savedInstanceState) {
        super.onCreate(savedInstanceState);
        setContentView(R.layout.activity_maps);

       ///////////////////////////

        Bundle mapViewBundle = null;
        if (savedInstanceState != null) {
            mapViewBundle = savedInstanceState.getBundle(MAP_VIEW_BUNDLE_KEY);
        }

        mapViewz = findViewById(R.id.mapView);
        mapViewz.onCreate(mapViewBundle);
        mapViewz.getMapAsync(this);
    }
    @Override
    public void onSaveInstanceState(Bundle outState) {
        super.onSaveInstanceState(outState);

        Bundle mapViewBundle = outState.getBundle(MAP_VIEW_BUNDLE_KEY);
        if (mapViewBundle == null) {
            mapViewBundle = new Bundle();
            outState.putBundle(MAP_VIEW_BUNDLE_KEY, mapViewBundle);
        }

        mapViewz.onSaveInstanceState(mapViewBundle);
    }
    @Override
    public void onMapReady(GoogleMap googleMap) {

        String XXXX = PusulaActivity.XxX.toString();
        String YYYY = PusulaActivity.YyY.toString();

        mapz = googleMap;
        mapz.setMinZoomPreference(16);
        LatLng ny = new LatLng(Double.parseDouble(XXXX), Double.parseDouble(YYYY));
        mapz.moveCamera(CameraUpdateFactory.newLatLng(ny));
    }

    @Override
    public void onResume() {
        mapViewz.onResume();
        super.onResume();
    }


    @Override
    public void onPause() {
        super.onPause();
        mapViewz.onPause();
    }

    @Override
    public void onDestroy() {
        super.onDestroy();
        mapViewz.onDestroy();
    }

    @Override
    public void onLowMemory() {
        super.onLowMemory();
        mapViewz.onLowMemory();
    }
}
